name: Build k8s-pod-restart-info-collector

env:
  IMAGE_NAME: proteantecs/k8s-pod-restart-info-collector

on:
  workflow_dispatch: {}
  push:
    branches:
      - develop
      - 'release/**'
      - master
    paths:
      - 'Dockerfile'
      - 'go.*'
      - '*.go'
      - 'controller.go'
      - 'main.go'
      - 'helpers.go'
      - 'slack.go'
  pull_request:
    branches: ['**']
    paths:
      - 'Dockerfile'
      - 'go.*'
      - '*.go'
      - 'controller.go'
      - 'main.go'
      - 'helpers.go'
      - 'slack.go'

jobs:
  docker:
    runs-on: [pt-dind]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_AUTH_TOKEN }}

      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v2
        with:
          username: ciprotean
          password: ${{ secrets.CIPROTEAN_DOCKER_PASS }}

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=branch,suffix=-{{sha}},priority=1002
            type=ref,event=tag
            type=ref,event=pr
            type=ref,event=pr,suffix=-{{sha}},priority=1001
            type=ref,event=pr,suffix=-{{base_ref}}-{{sha}}
            type=semver,pattern={{raw}}
            type=semver,pattern={{version}}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

      - name: Set up Docker Context for Buildx
        run: docker context create builders

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          endpoint: builders

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm64

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
